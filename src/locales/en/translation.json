{
    "hero": {
        "header": "ðŸš€ Learn â€¢ Build â€¢ Launch",
        "title": "Start Your Coding Journey Today",
        "sub_title": "A personalized learning plan â€“ from basics to a full project â€“ and learn how to choose an idea for a real app.",
        "description": "you'r not alone!",
        "buttons": {
            "plans": "SHOW PLANS",
            "syllabus": "SHOW SYLLABUS"
        },
        "bottom_line": "After a review here, you won't want to check anywhere else"
    },
    "projects": {
        "title": "Projects",
        "solve": {
            "name": "Solve - the block buster",
            "line_1": "software for human organiational challenges",
            "line_2": "SOLVE is a SaaS platform to anticipate and solve sensitive human organizational problems while ensuring individual and team goals are achieved",
            "line_3": "SOLVE offers a reliable and consistent experience to deliver immediate value around profitability, operational efficiency, and time.",
            "tech": {
                "title": "Set of technologys",
                "front": {
                    "name": "Frontend (see more)",
                    "header": {
                        "title": "React framework",
                        "sub_title": "learn more",
                        "url": "https://www.netguru.com/blog/why-use-react"
                    },
                    "line_1": "Single Page Applications (SPA) Capability",
                    "line_2": "Highly Responsive UI - Immediate feedback to user interactions, no full page reloads.",
                    "line_3": "Reduced Server Load - More processing happens client-side",
                    "line_4": "Unlimited Customization - Complete control over design, functionality, and user experience."
                },
                "back": {
                    "name": "Backend (see more)",
                    "header": {
                        "title": "Nest.js framework",
                        "sub_title": "learn more",
                        "url": "https://www.habilelabs.io/blog/why-choose-nest-js-over-other-node-frameworks"
                    },
                    "line_1": "Modular Architecture - Encourages organizing code into self-contained modules, improving maintainability, testability, and reusability.",
                    "line_2": "Enterprise-Grade Applications - Ideal for building complex, large-scale, and long-lived applications due to its structured approach and emphasis on maintainability."
                }
            }
        },
        "bnei": {
            "name": "American community in Israel",
            "line_1": "Accompanying and guiding American families in their move to Israel",
            "line_2": "An ongoing management system for the Orthodox community",
            "line_3": "A platform for communication between community members, voluntary information collection, planning and tracking campaigns",
            "tech": {
                "title": "Set of technologys",
                "front": {
                    "name": "Frontend (see more)",
                    "header": {
                        "title": "React framework",
                        "sub_title": "learn more",
                        "url": "https://www.netguru.com/blog/why-use-react"
                    },
                    "line_1": "React framwork",
                    "line_2": "Choose Your Tools -  React allows me to hand-pick the best libraries for specific needs",
                    "line_3": "Accelerated Development: By reusing components, I can build new features faster and ensure consistency across the application, delivering new value to the community more quickly."
                },
                "back": {
                    "name": "Backend (see more)",
                    "header": {
                        "title": "Express.js",
                        "sub_title": "learn more",
                        "url": " "
                    },
                    "line_1": "RESTful API Design - Express is perfectly suited for building clear and scalable RESTful APIs, which is often the backbone of modern web applications, including community platforms that need to serve data to web and potentially mobile clients."
                }
            }
        }
    },
    "benefits": {
        "title": "How to decide?",
        "sub_title": "Concepts you must know!",
        "performance": {
            "name": "Performance",
            "line_1": "Web performance is all about making websites fast, including making slow processes seem fast.",
            "line_2": "Does the site load quickly, allow the user to start interacting with it quickly, and offer reassuring feedback if something is taking time to load (e.g., a loading spinner)? Are scrolling and animations smooth?"
        },
        "scaleability": {
            "name": "Scaleability",
            "line_1": "Suppose you've built a web application and started getting a few customers. After some feedback and iterations, you are ready with a product that people want.",
            "line_2": "From now, your application is drawing attention to more and more users, with more and more requests per minute (RPM). Suddenly, a wave of new people use your app, and at one point, they can't use it anymore."
        },
        "ui_ux": {
            "name": "UI/UX",
            "line_1": "The modern businesses are constantly striving to stand out and deliver exceptional products and services to their customers. A major component of product development, especially for web applications, is how users interact with the app.",
            "line_2": "This is where UI/UX design comes into play."
        },
        "versions": {
            "name": "Versions and security",
            "line_1": "the process of deploying new versions of the application's code and assets to enhance functionality, fix bugs, improve performance, or add new features"
        },
        "offer": {
            "title": "What might have been offered to you out there?",
            "wordpress_card": {
                "title": "Promotional Website - WordPress",
                "line_1": "Up to 8 pages - A responsive WordPress website built using an existing template and built with a page builder, and this is how they 'put together' the website.",
                "line_2": "Two-year guarantee (Maintenance thereafter for an additional fee) - This guarantee is limited solely to bugs built into the template or installed plugins. It certainly does not include: WordPress version updates, templates or plugins (which are important for security), handling conflicts between plugins (which happen a lot with WordPress), restoring the site if it is hacked (WordPress is very popular and prone to hacking if not maintained) and adding new features.",
                "line_3": "Content Management - This is essentially the built-in content management system of WordPress. It is a standard system.",
                "line_4": "Website hosting - for a monthly fee. You get a basic hosting service, probably without a CDN, with slow response times under load, and probably without a professional backup service (or the backups are expensive in case you need to restore)"
            },
            "react_card": {
                "title": "Full development of a web application",
                "line_1": "Suitable for businesses that need a customized solution, high performance, scalability, integration with other systems, a unique user interface, or complex functionality.",
                "line_2": "Instead of being dependent on a single provider who charges you a fixed monthly fee for hosting that is part of their package, we recommend that you fully own and control your hosting. A website built with us benefits from much more advanced and efficient hosting capabilities. The monthly cost on those platforms is often very low for small-to-medium websites, and often even free.",
                "line_3": "You can manage your website content from anywhere, regardless of the website technology itself. Today it appears on your website, and tomorrow if you want a mobile app or any other platform â€“ the content is already ready and accessible.",
                "line_4": "If you would like to add new features, change design, make significant security updates to libraries (not under initial responsibility) or fix bugs that do not directly arise from my initial code, I will offer you a package of hours or a small one-off project according to your needs. There is no fixed monthly commitment for 'on-the-fly' maintenance, but you will only pay for the work you actually need."
            }
        }
    },
    "guest": {
        "contact_us": {
            "title": "Contact Us",
            "subtitle": "Have a question or want to learn more? Send us a message!",
            "name_label": "Name",
            "email_label": "Email",
            "message_label": "Message",
            "send_message_button": "Send Message"
        }
    },
    "hit": {
        "chip": "How it works",
        "title": "",
        "card_0": {
            "title": "Confused?",
            "description": "chose a plan by your own or give me a call"
        },
        "card_1": {
            "title": "",
            "description": ""
        },
        "card_2": {
            "title": "",
            "description": ""
        }
    },
    "pricing_plans": {
        "header": "Learn to Code â€¢ Build Real Things",
        "title": "Flexible plans for every stage",
        "sub_title": "Clear outcomes, modern tools, and handsâ€‘on guidance. Choose your path below.",
        "comment": "Advanced topics like Docker/DevOps are optional and best for nonâ€‘beginners.",
        "basic": {
            "id": "basic_plan_id",
            "title": "Basic",
            "tagline": "Payâ€‘perâ€‘lesson coaching",
            "priceLabel": "â‚ª 110 / hour",
            "duration": "50â€‘minute sessions",
            "recommendedFor": "Perfect if you're just starting with coding.",
            "cta": "Start a lesson"
        },
        "pro": {
            "id": "pro_plan_id",
            "title": "Professional",
            "tagline": "Build a standard website together",
            "priceLabel": "â‚ª 2,200 project price",
            "duration": "Estimated 4â€“8 weeks (scopeâ€‘dependent)",
            "recommendedFor": "You want a real web app from scratch, working sideâ€‘byâ€‘side.",
            "cta": "Build my website"
        },
        "premium": {
            "id": "premium_plan_id",
            "title": "Premium",
            "tagline": "Endâ€‘toâ€‘end application (web or desktop)",
            "priceLabel": "Custom â€” contact for quote",
            "duration": "Typical 6â€“10 weeks (endâ€‘toâ€‘end)",
            "recommendedFor": "Launch a productionâ€‘ready app with guidance from setup to deployment.",
            "cta": "Launch my app"
        }
    },
    "faceToFace": {
        "title": "Frontal lessons",
        "description": "I also offer face-to-face software development lessons. These sessions allow for a more interactive and personal learning experience compared to online classes.",
        "address": "For the residents of Beit Shemesh and the surrounding area",
        "cta": "Book a Meeting"
    },
    "breaking": {
        "text": "Hey Beit-Shemesh residents! Book a face-to-face software development lesson today!",
        "button": "Book Now"
    },
    "n8n": {
        "text": "Coming soon. Course on developing automation tools to improve business capabilities"
    },
    "syllabus": {
        "week_0": {
            "topic": "Software Fundamentals â€“ Introduction",
            "content": "What is software, how does it work, workflow (Software Lifecycle)",
            "exercise": "Writing a simple JS program to print text to the console"
        },
        "week_1": {
            "topic": "Variables and Data Types",
            "content": "Variables, data types (String, Number, Boolean), conditions and loops",
            "exercise": "Exercises with conditions and loops in JS"
        },
        "week_2": {
            "topic": "Basic Data Structures",
            "content": "Arrays, lists, dictionaries, basic algorithms",
            "exercise": "Creating arrays and dictionaries, search and sorting exercises"
        },
        "week_3": {
            "topic": "Functions and Scope",
            "content": "Functions, parameters, scope, callbacks",
            "exercise": "Writing functions to manipulate arrays and strings"
        },
        "week_4": {
            "topic": "Node.js Basics",
            "content": "JS server environment, console, basic modules",
            "exercise": "Creating a Node.js script to run basic logic"
        },
        "week_5": {
            "topic": "Small Project",
            "content": "Calculator or todo list in the browser",
            "exercise": "Developing a small project with JS and HTML/CSS"
        },
        "week_6": {
            "topic": "Frontend with React â€“ Introduction",
            "content": "Components, props, state, JSX",
            "exercise": "Creating a basic component, text display and simple dynamics"
        },
        "week_7": {
            "topic": "React â€“ Hooks and Events",
            "content": "useState, useEffect, events in components",
            "exercise": "Adding interactivity to a basic React project"
        },
        "week_8": {
            "topic": "React â€“ Data Management",
            "content": "Using API, Fetch, JSON, advanced state management",
            "exercise": "Creating API calls and displaying data in a component"
        },
        "week_9": {
            "topic": "Backend with Node.js and Express",
            "content": "Creating REST API, CRUD, basic database",
            "exercise": "Building a basic API with a database (MongoDB/MySQL)"
        },
        "week_10": {
            "topic": "Basic Authentication",
            "content": "JWT / Sessions, user permissions",
            "exercise": "Adding login to the system, maintaining sessions"
        },
        "week_11": {
            "topic": "Git and Version Control",
            "content": "init, add, commit, push, pull, branch, GitHub",
            "exercise": "Working with branches, pull requests, merges"
        },
        "week_12": {
            "topic": "DevOps â€“ Docker",
            "content": "Containers, Dockerfile, Docker Compose",
            "exercise": "Creating a basic Dockerfile and running an application in a container"
        },
        "week_13": {
            "topic": "CI/CD Basics and Cloud Deployment",
            "content": "GitHub Actions, basic deployment on AZURE",
            "exercise": "Setting up a basic CI/CD workflow, deploying an application"
        },
        "week_14": {
            "topic": "Final Project",
            "content": "Full Stack application with React and Node.js, database, REST API, Docker deployment",
            "exercise": "Complete application development using all learned tools and deployment"
        }
    }
}